name: simple_release

on:
  workflow_dispatch:
  push:
    tags:
      - '*'  # Match any tag
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '8'
          check-latest: true

      - name: install custom jars
        run: bash script/mvn_install_jar.sh
        
      - name: Get the version
        id: get_version
        run: echo "MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Set up Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package

      - name: Zip the package
        run: |
          cd target/deploy/
          zip -r ../../eHOST-${{ env.MAVEN_VERSION }}.zip *

      - name: Create Release and Upload Asset
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.MAVEN_VERSION }}
          name: Release ${{ env.MAVEN_VERSION }}
          artifacts: ./eHOST-${{ env.MAVEN_VERSION }}.zip
          draft: false
          prerelease: ${{ contains(env.MAVEN_VERSION, 'SNAPSHOT') || contains(env.MAVEN_VERSION, 'snapshot') }}
          makeLatest: ${{ !contains(env.MAVEN_VERSION, 'SNAPSHOT') && !contains(env.MAVEN_VERSION, 'snapshot') }}
          allowUpdates: ${{ contains(env.MAVEN_VERSION, 'SNAPSHOT') || contains(env.MAVEN_VERSION, 'snapshot') }}
